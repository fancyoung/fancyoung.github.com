<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 翻译 | 没有标题的博客]]></title>
  <link href="http://fancyoung.com/blog/categories/fan-yi/atom.xml" rel="self"/>
  <link href="http://fancyoung.com/"/>
  <updated>2019-04-16T21:51:32+08:00</updated>
  <id>http://fancyoung.com/</id>
  <author>
    <name><![CDATA[思扬]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CSS实现背景透明完美解决方案]]></title>
    <link href="http://fancyoung.com/blog/css-background-transparency/"/>
    <updated>2011-11-29T16:44:00+08:00</updated>
    <id>http://fancyoung.com/blog/css-background-transparency</id>
    <content type="html"><![CDATA[<p>翻译自: <a href="http://robertnyman.com/2010/01/11/css-background-transparency-without-affecting-child-elements-through-rgba-and-filters/">CSS Background Transparency Without Affecting Child Elements, Through RGBa And Filters</a></p>

<p>当今的大部分网页设计都包含了半透明的元素.但用CSS实现想要的效果却没那么简单.</p>

<h2>现存的问题</h2>

<p>如果我们想要一个半透明背景,有两种实现方式:<br/>
- 利用CSS和opacity属性<br/>
- 建立一个24位PNG背景图片<br/>
用opacity的问题除了
<a href="http://robertnyman.com/2008/09/16/you-want-css-opacity-to-go-with-that-well-suit-yourself/">需要通过麻烦的语法来兼容所有浏览器</a>,
还有不单该元素自身背景透明了,它的子元素也会透明.
所以里面所有的文字也是透明的,这一般不是想要的效果.
你可以做一些CSS trick,通过建立额外的元素来解决这个问题,但这种解决方案很恶心.</p>

<p>用PNG的问题是会额外增加HTTP请求,
而且图片比几行css代码要大得多-
尤其考虑到图片不能太小以避免
<a href="http://robertnyman.com/2009/05/26/serious-memory-leak-issue-with-24-bit-png-images-with-alpha-transparency-in-internet-explorer/">IE下24位PNG图透明时引起的内存泄漏</a>.</p>

<!--more-->


<h2>解决方案</h2>

<p>这里提供一种方法:
<a href="http://en.wikipedia.org/wiki/RGBA_color_space">RGBa colors</a>.
它的美妙之处在于你可以通过设置RGB值和透明值,轻松的实现颜色透明.
代码如下:
<code>
.alpha60 {
  /* 用于不支持RGBa的浏览器 */
  background: rgb(0, 0, 0);
  /* RGBa, 透明度0.6 */
  background: rgba(0, 0, 0, 0.6);
}
</code>
透明将只对背景生效,很好很强大,对吧:)</p>

<h3>继续</h3>

<p>不幸的是IE不支持RGBa(IE678都不行).
幸运的是微软在2000年时疯狂的给IE加上了各种过滤器.
其中有一个是<a href="http://msdn.microsoft.com/en-us/library/ms532997(VS.85).aspx">渐变过滤器(the gradient filter)</a>,
我们只需要把开始结束都设置成一个颜色就可以了.
你现在会想,&ldquo;那我们怎么将其透明呢?&rdquo;.
你只需要用16进制值来定义颜色就可以了.
下面是用渐变过滤器实现和上面同等透明效果的代码:
<code>
.alpha60 {
  filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000);
}
</code>
你可以看到定义里的8位16进制数字,
前两位代表透明度,接下来两位是红色,接着就是绿色和蓝色.
注意两位16进制颜色的范围是0~255(ff).
那我们怎么将<code>0.6</code>转化为16进制数呢?</p>

<p>这里就需要用到一些数学知识了.
基本上,我们只需要将需要的透明度(比如0.6)乘以255,再转化为16进制即可.
还有一个简单的办法是利用
<a href="http://www.google.com/help/features.html">Google’s Search Features</a>,
你只需要在Google里搜索
<a href="http://www.google.se/search?q=0.6+*+255+in+hex">0.6 * 255 in hex</a>
就能得到答案.
不过Google计算器仿佛只能处理整数,而
<a href="http://www.google.se/search?q=0.3+*+255+in+hex">0.3 * 255 in hex</a>
它便无法得出结果.</p>

<p>还有一种更快的方法就是利用JavaScript,
只需要在浏览器控制行里输入
<code>
Math.floor(0.6 * 255).toString(16);
</code>
便能得出结果.</p>

<h3>整合</h3>

<p>根据上面的方法,我们来写一个完整的实现:
<code>
.alpha60 {
  /* Fallback for web browsers that doesn't support RGBa */
  background: rgb(0, 0, 0);
  /* RGBa with 0.6 opacity */
  background: rgba(0, 0, 0, 0.6);
  /* For IE 5.5 - 7*/
  filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000);
  /* For IE 8*/
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000)";
}
</code>
注意,我们还需要额外为IE定义<code>background: transparent</code>,
我们可以通过条件注释来解决.</p>

<h2>浏览器支持</h2>

<p>支持RGBa的有:<br/>
- firefox 3+<br/>
- Safari 2+<br/>
- Opera 10<br/>
IE过滤器支持IE5.5及以上版本.</p>

<p>所以这种方式几乎支持了所有浏览器.</p>

<h3>感谢</h3>

<p>Thanks to <a href="http://css-tricks.com/rgba-browser-support/">RGBa Browser Support</a> and
<a href="http://leaverou.me/2009/02/bulletproof-cross-browser-rgba-backgrounds/">Bulletproof, cross-browser RGBA backgrounds, today</a>
for the information and inspiration.</p>

<p>Thanks to <a href="http://friendlybit.com/">Emil Stenström</a> and <a href="http://kodfabrik.se/">Pelle Wessman</a>
for coming up with countless alternatives for hex conversion, and explaining basic math to stupid me.</p>

<h2>译者总结</h2>

<p>大家使用时可直接复制下面代码:
<code>
/* 白色背景,透明度0.6 */
.alpha60 {
  background: rgb(255, 255, 255);
  background: rgba(255, 255, 255, 0.6);
  background: transparent\9;
  zoom: 1;
  filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99ffffff, endColorstr=#99ffffff);
  -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#99ffffff, endColorstr=#99ffffff)";
}
</code>
最后来个效果图,顺便试试jsfiddle的嵌入:<br/>
<iframe style="width: 100%; height: 300px" frameborder="0" seamless="seamless" src="http://jsfiddle.net/nMKGs/embedded/result,html,css/light/"></iframe></p>

<p>(2012-05-01 更新)<br/>
因为自己用的是Sass，所以封装了一下，Sass的功能很强大：<br/>
<a href="/blog/better-transparentize-mixin-for-sass">Sass中通过mixin封装透明背景模块</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blueprint教程]]></title>
    <link href="http://fancyoung.com/blog/blueprint-tutorial/"/>
    <updated>2011-11-17T13:15:00+08:00</updated>
    <id>http://fancyoung.com/blog/blueprint-tutorial</id>
    <content type="html"><![CDATA[<p>翻译自: <a href="https://github.com/joshuaclayton/blueprint-css/wiki/Quick-start-tutorial">Blueprint CSS Framework Tutorial</a></p>

<p>Blueprint是个好框架，本教程会深入介绍你可以用它来做什么，也会说到什么时候不适合用。</p>

<h2>Blueprint简介</h2>

<p>Blueprint是一个CSS框架，为减少开发时间而设计。它可以构架起有坚实基础的CSS，其中包含合理的排版（typography）、可定制的网格(grid)、打印样式等。</p>

<p>但是Blueprint不是银弹，它适用于每个页面都需要独特的设计。在决定使用Blueprint前建议先看看Blueprint例子以决定是否适合你。你可以检出<code>tests</code>目录，里面例子展示大部分Blueprint样式。</p>

<p>“框架”这个词也许有些误导，Blueprint并不会建议你如何组织你的CSS文件。它更像一个工具箱，你可以从中选出你需要的。</p>

<!--more-->


<h2>结构概述</h2>

<p>自下而上的看Blueprint：</p>

<p>CSS布局：
CSS reset: 移除浏览器的默认规则。
Typography: 默认提供一些漂亮的排版和颜色。
Grid: 提供一组样式来制作网格。</p>

<p>第二部分是脚本。你可以它来自定义框架，可以是列数、宽度等外观，还可以是路径、命名空间等。我们有两个脚本：
1. Compressor: 用于压缩和自定义源文件。
2. Validator: 用于验证Blueprint核心文件。</p>

<p>以上是简单介绍，接下来让我们进入细节。首先，我们看看CSS部分。然后我们再介绍脚本，以及如何通过它数和自定制框架。</p>

<h2>设置Blueprint</h2>

<p>为了使用Blueprint，你必须包含以下三个文件在你的HTML中：</p>

<ul>
<li><code>blueprint/screen.css</code>: 主要文件，页面展示的样式都在里面。</li>
<li><code>blueprint/print.css</code>: 用于打印。</li>
<li><code>blueprint/ie.css</code>: 用于IE浏览器下的校正。</li>
</ul>


<p>在HTML中嵌入下面代码来引用（请确认路径正确）：
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;link rel="stylesheet" href="css/blueprint/screen.css" type="text/css" media="screen, projection" /&gt;
</span><span class='line'>&lt;link rel="stylesheet" href="css/blueprint/print.css" type="text/css" media="print" /&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;!--[if lt IE 8]&gt;
</span><span class='line'>  &lt;link rel="stylesheet" href="css/blueprint/ie.css" type="text/css" media="screen, projection" /&gt;
</span><span class='line'>&lt;![endif]--&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;（原文提示XHTML需要用"/&gt;"结束标签，上面代码中我已经直接加上了）
</span><span class='line'>
</span><span class='line'>## 使用Blueprint里的CSS
</span><span class='line'>之前已经提过，Blueprint有三个布局，前两个布局，CSS reset和默认排版用于设置默认HTML样式。所以你不需要更改这两个文件。如果你想更改全局字体大小等，建议你写在自己的CSS文件里，以便将来更新Blueprint版本。
</span><span class='line'>
</span><span class='line'>#### 排版相关class
</span><span class='line'>While the typography of Blueprint mainly applies itself, there’s a few classes
</span><span class='line'>provided. 下面是一个它们名字的列表和介绍它们的作用:
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>`.hide`
</span><span class='line'>隐藏元素  
</span><span class='line'>`.quiet`
</span><span class='line'>使字体颜色柔和  
</span><span class='line'>`.loud`
</span><span class='line'>黑色字体  
</span><span class='line'>`highlight`
</span><span class='line'>黄色背景  
</span><span class='line'>`.added`
</span><span class='line'>绿色背景  
</span><span class='line'>`.removed`
</span><span class='line'>红色背景  
</span><span class='line'>`.first`
</span><span class='line'>移除左侧margin/padding  
</span><span class='line'>`.last`
</span><span class='line'>移除右侧margin/padding  
</span><span class='line'>`.top`
</span><span class='line'>移除顶部margin/padding  
</span><span class='line'>`.bottom`
</span><span class='line'>移除底部margin/padding
</span><span class='line'>
</span><span class='line'>#### 表格样式
</span><span class='line'>Blueprint可以通过给输入元素加`.text`, `.title`类来控制，其中`.text`表示普通大小，`.title`提供一个大字体的输入框。
</span><span class='line'>
</span><span class='line'>这里还有一些类可以用于成功或失败信息：
</span><span class='line'>
</span><span class='line'>`div.error`
</span><span class='line'>建议一个失败框（红色）。  
</span><span class='line'>`div.notice`
</span><span class='line'>建议一个提示框（黄色）。  
</span><span class='line'>`div.success`
</span><span class='line'>建议一个成功框（绿色）。
</span><span class='line'>
</span><span class='line'>#### 建立网格
</span><span class='line'>第三个布局是网格，是一个给你网站建立各样网格的工具。记住网格背后的大部分CSS都可以自定义（下面会讲到）。在这个部分我会使用默认设置。
</span><span class='line'>
</span><span class='line'>默认网格有24列，每列宽30px，边距(margin)10px。总共宽为950px，适合1024x768的分辨率。如果你想要更窄的设计，可以看下面自定义网格一节。
</span><span class='line'>
</span><span class='line'>怎么用Blueprint来建立网格呢？新建一个`&lt;div/&gt;`来代表一列，并且给它加一个`.span-x`的class。比如，如果你想要一个三列的布局，两窄一宽，并且包含头尾，可以参考下面的代码:
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;div class="container"&gt;
</span><span class='line'>  &lt;div class="span-24"&gt;
</span><span class='line'>    头部
</span><span class='line'>  &lt;/div&gt;
</span><span class='line'>
</span><span class='line'>  &lt;div class="span-4"&gt;
</span><span class='line'>    第一列
</span><span class='line'>  &lt;/div&gt;
</span><span class='line'>  &lt;div class="span-16"&gt;
</span><span class='line'>    中间列
</span><span class='line'>  &lt;/div&gt;
</span><span class='line'>  &lt;div class="span-4 last"&gt;
</span><span class='line'>    最后一列
</span><span class='line'>  &lt;/div&gt;
</span><span class='line'> 
</span><span class='line'>  &lt;div class="span-24"&gt;
</span><span class='line'>    尾部
</span><span class='line'>  &lt;/div&gt;
</span><span class='line'>&lt;/div&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;此外，还有两个class你应该知道。首先，每个Blueprint页面应该包含在一个class为`.container`的div里，一般紧跟在body标签后。
</span><span class='line'>
</span><span class='line'>第二，每行的最后一列（默认24列），应该用class`.last`来移除右侧的边距(margin)。可以参考`tests/parts/`里的例子。这些文件告诉了你Blueprint的网格能做些什么。
</span><span class='line'>
</span><span class='line'>这里是一个其他网格相关class的快速概述：  
</span><span class='line'>`.append-x`
</span><span class='line'>附加（在后面加）x条空列。  
</span><span class='line'>`.prepend-x`
</span><span class='line'>追加（在前面）x条空列。  
</span><span class='line'>`.push-x`
</span><span class='line'>推送x列到左侧。可用于切换列。  
</span><span class='line'>`.pull-x`
</span><span class='line'>推送x列到右侧。可用于切换列。  
</span><span class='line'>`.border`
</span><span class='line'>列右侧加分界线。  
</span><span class='line'>`.colborder`
</span><span class='line'>建立新列，分界线在中部。  
</span><span class='line'>`.clear`
</span><span class='line'>换行，无论是否有空。  
</span><span class='line'>`.showgrid`
</span><span class='line'>给容器或列添加后能看见网格和基线。 
</span><span class='line'>
</span><span class='line'>在这个列表中，`x`用于append/prepend时范围是1-23，用于push/pull时是1-24。如果你自定义了新的列数，这个范围会随之变化。
</span><span class='line'>
</span><span class='line'>下面是另一个例子，包含4列等宽，前两列间有分界线，后两列间也有，4列的中间有段空白。
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;div class="container"&gt;
</span><span class='line'>  &lt;div class="span-5 border"&gt;
</span><span class='line'>    第一列
</span><span class='line'>  &lt;/div&gt;
</span><span class='line'>  &lt;div class="span-5 append-4"&gt;
</span><span class='line'>    第二列
</span><span class='line'>  &lt;/div&gt;
</span><span class='line'>  &lt;div class="span-5 border"&gt;
</span><span class='line'>    第三列
</span><span class='line'>  &lt;/div&gt;
</span><span class='line'>  &lt;div class="span-5 last"&gt;
</span><span class='line'>    第四列
</span><span class='line'>  &lt;/div&gt;
</span><span class='line'>&lt;/div&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;
</span><span class='line'>你也可以通过嵌套列来实现想要的布局。下面例子展现的是页面左半部有四个长方形，两上两下，右半部有一个长方形。
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;div class="container"&gt;
</span><span class='line'>  &lt;div class="span-12"&gt;
</span><span class='line'>    &lt;div class="span-6"&gt;
</span><span class='line'>      左上
</span><span class='line'>    &lt;/div&gt;
</span><span class='line'>    &lt;div class="span-6 last"&gt;
</span><span class='line'>      右上
</span><span class='line'>    &lt;/div&gt;
</span><span class='line'>    &lt;div class="span-6"&gt;
</span><span class='line'>      左下
</span><span class='line'>    &lt;/div&gt;
</span><span class='line'>    &lt;div class="span-6 last"&gt;
</span><span class='line'>      右下
</span><span class='line'>    &lt;/div&gt;
</span><span class='line'>  &lt;/div&gt;
</span><span class='line'>  &lt;div class="span-12 last"&gt;
</span><span class='line'>    另一块
</span><span class='line'>  &lt;/div&gt;
</span><span class='line'>&lt;/div&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;code&gt;``
</span><span class='line'>如果不理解可以在浏览器里尝试上面的代码。想看更过的如何使用class的例子，请看&lt;/code&gt;/tests/parts/grid.html`。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h2&gt;脚本&lt;/h2&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Blueprint有两个脚本：一个用于压缩和自定义CSS，另一个是验证核心CSS文件，以免你修改了某些文件。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h4&gt;验证器(The Validator)&lt;/h4&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;验证器的工作很简单——检查Blueprint核心CSS里的文件。脚本使用配套版本的W3C CSS验证器来完成。为了运行，你需要安装Ruby。然后你可以运行&lt;code&gt;$ ruby validate.rb&lt;/code&gt;。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;请注意Blueprint有几个验证错误。它们是已知的，来自于几个为了保持浏览器一致性的CSS hack。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h4&gt;压缩器(The Compressor)&lt;/h4&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;你的HTML里引用压缩版的核心CSS文件时，当你做过修改，需要重新压缩。这是压缩器脚本的作用。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;另外，你可以在这里自定义网格。为了自定义网格，需要使用一个特殊的设置文件，当你运行压缩器时，就会生成新的CSS。新压缩的文件将会使用你的设置。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;你之需要重新运行脚本来重新压缩。这会解析核心CSS文件并在blueprint文件夹里生成新文件。与验证器一样，需要安装Ruby。在&lt;code&gt;lib&lt;/code&gt;目录里执行&lt;code&gt;$ ruby compress.rb&lt;/code&gt;。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;执行这个文件会将&lt;code&gt;blueprint/src&lt;/code&gt;下的文件合并成三个文件：&lt;code&gt;ie.css&lt;/code&gt;, &lt;code&gt;print.css&lt;/code&gt;, &lt;code&gt;screen.css&lt;/code&gt;。&lt;br/&gt;
</span><span class='line'>但是你可以通过加参数来改变行为。执行&lt;code&gt;$ ruby compress.rb -h&lt;/code&gt;查看你可以使用的基本参数。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h4&gt;自定义设置&lt;/h4&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;你可以阅读&lt;code&gt;lib/compress.rb&lt;/code&gt;里的文档来学习如何自定义设置。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h2&gt;参考&lt;/h2&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;a href="https://github.com/joshuaclayton/blueprint-css/wiki/Quick-start-tutorial"&gt;Blueprint CSS Framework Tutorial(官方原文)&lt;/a&gt;&lt;br/&gt;
</span><span class='line'>&lt;a href="http://blueprintcss.org/"&gt;官网&lt;/a&gt;&lt;br/&gt;
</span><span class='line'>&lt;a href="http://blueprintcss.org/tests/"&gt;Demo&lt;/a&gt;&lt;/p&gt;
</span><span class='line'>]]&gt;&lt;/content&gt;
</span><span class='line'>  &lt;/entry&gt;
</span><span class='line'>  
</span><span class='line'>  &lt;entry&gt;
</span><span class='line'>    &lt;title type="html"&gt;&lt;![CDATA[将Arch Linux从32位升到64位]]&gt;&lt;/title&gt;
</span><span class='line'>    &lt;link href="http://fancyoung.com/blog/migrating-between-architectures-without-reinstalling/"/&gt;
</span><span class='line'>    &lt;updated&gt;2011-11-07T14:37:00+08:00&lt;/updated&gt;
</span><span class='line'>    &lt;id&gt;http://fancyoung.com/blog/migrating-between-architectures-without-reinstalling&lt;/id&gt;
</span><span class='line'>    &lt;content type="html"&gt;&lt;![CDATA[&lt;ul&gt;
</span><span class='line'>&lt;li&gt;翻译自Arch Wiki：&lt;a href="https://wiki.archlinux.org/index.php/Migrating_Between_Architectures_Without_Reinstalling"&gt;Migrating Between Architectures Without Reinstalling&lt;/a&gt;&lt;/li&gt;
</span><span class='line'>&lt;li&gt;i686为32位，x86_64位64位&lt;/li&gt;
</span><span class='line'>&lt;li&gt;升级有风险，操作须谨慎。本人使用文中方法2升级时无意间重启了电脑，催悲了。&lt;/li&gt;
</span><span class='line'>&lt;/ul&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;!--more--&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;h2&gt;准备工作&lt;/h2&gt;
</span><span class='line'>
</span><span class='line'>&lt;h3&gt;确认为64位平台&lt;/h3&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;如果你已经正在使用x86_64但是想安装i686，可以跳过此步。
</span><span class='line'>为了运行64位软件，你的CPU必须支持64位。现在大部分CPU都支持64位。你可以通过运行一下命令来确认：
</span><span class='line'>&lt;code&gt;
</span><span class='line'>$ grep --color 'lm' /proc/cpuinfo
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>（原文中为&lt;code&gt;grep --color '\' /proc/cpuinfo&lt;/code&gt;， 应该不对）
</span><span class='line'>当CPU为x86_64平台时，输出结果里会出现高亮的 &lt;code&gt;lm&lt;/code&gt; （“long mode”）。
</span><span class='line'>注意不是&lt;code&gt;lahf_lm&lt;/code&gt;，它和64位无关。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h3&gt;硬盘空间&lt;/h3&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;在迁移过程中，&lt;code&gt;/var/cache/pacman/pkg&lt;/code&gt;的大小将翻倍，请为此做好准备。这是假定cache里只有当前安装的包，就像&lt;code&gt;$ pacman -Sc&lt;/code&gt;（clean）刚运行过一样。使用空间增长是因为所有包同时有i686和x86_64两个版本。
</span><span class='line'>如果你没有足够的空间，可以使用&lt;a href="https://wiki.archlinux.org/index.php/Gparted"&gt;gparted&lt;/a&gt;来调整相关分区大小，或者mount另一个分区到&lt;code&gt;/var/cache/pacman&lt;/code&gt;。
</span><span class='line'>在迁移过程中请不要移除老框架的软件包，知道完全升级成功。过早的移除会使你无法回退和还原变更。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h3&gt;电源支持&lt;/h3&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;升级时间比较长，并且不可中断。根据你的 安装包大小及网络速度，你最好为此准备至少一个小时的升级时间（虽然你可以先把它们下载下来）。请保证你的电源稳定。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h3&gt;回退准备&lt;/h3&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;如果迁移过程中失败，有些包可以帮助你解决此时的问题，但是需要你在迁移之前安装。详情可以参考后面的 #Troubleshooting 。
</span><span class='line'>包&lt;a href="https://www.archlinux.org/packages/?name=busybox"&gt;busybox&lt;/a&gt;可以用来还原变更。它不依赖于其他包，可以单独安装。通过下面命令可以安装32位（i686）的版本
</span><span class='line'>&lt;code&gt;
</span><span class='line'>$ pacman -S busybox
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>另一个包是&lt;a href="https://www.archlinux.org/packages/?name=lib32-glibc"&gt;lib32-glibc&lt;/a&gt;，在&lt;a href="https://wiki.archlinux.org/index.php/Multilib_Project"&gt;Multilib&lt;/a&gt;的x86_64资源库里。这个只有当你从32位迁移至其它版本时才可能使用（It is probably only useful when migrating away from 32 bits）;无论如何你可能安全跳过这个包。你可以用这个包来运行32位程序，通过明确的调用&lt;code&gt;/lib/ld-linux-x86-32.so.2&lt;/code&gt;。可用下面命令行安装。
</span><span class='line'>&lt;code&gt;
</span><span class='line'>$ pacman -S lib32-glibc
</span><span class='line'>&lt;/code&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h2&gt;方法1：使用Arch LiveCD&lt;/h2&gt;
</span><span class='line'>
</span><span class='line'>&lt;ol&gt;
</span><span class='line'>&lt;li&gt;下载、刻录并启动64位Arch ISO LiveCD。&lt;/li&gt;
</span><span class='line'>&lt;li&gt;配置LiveCD的网络，然后pacman用新的库。&lt;/li&gt;
</span><span class='line'>&lt;li&gt;将现在的安装挂在到&lt;code&gt;/mnt&lt;/code&gt;目录。如：&lt;code&gt;mount /dev/sda1 /mnt&lt;/code&gt;&lt;/li&gt;
</span><span class='line'>&lt;li&gt;使用下面的脚本来执行：升级本地pacman数据库、取得本地安装包列表并重新安装：</span></code></pre></td></tr></table></div></figure>

<h1>!/bin/bash</h1></li>
</ol>


<p>MOUNTED_INSTALL=&lsquo;/mnt&rsquo;
TEMP_FILE=&lsquo;/tmp/packages.list&rsquo;</p>

<p>pacman &ndash;root $MOUNTED_INSTALL -Sy
pacman &ndash;root $MOUNTED_INSTALL -Qqet > $TEMP_FILE</p>

<p>for PKG in $(cat $TEMP_FILE) ; do
   pacman &ndash;root $MOUNTED_INSTALL -S $PKG &ndash;noconfirm
done</p>

<p>exit 0
```</p>

<h2>方法2：从当前系统升级</h2>

<h3>准备</h3>

<h4>Cache old packages</h4>

<blockquote><p>注意：如果你有从AUR或第三方库的包，并且在新的平台里查询不到，pacman会告知找不到相应替代。将这些包记录下来，以便在升级成功后重新安装，并用<code>$ pacman -Rsn package_name</code>来卸载。</p></blockquote>

<p>确保你现在的包都在你的cache里，下载它们（老平台的）以便回退。
<code>
$ pacman -Sw $(comm -23 &lt;(pacman -Qq) &lt;(pacman -Qmq))
</code>
或者用pacman-contrib包里的bacman来生成它们。
如果你是从32位迁移，现在可以安装32位的Busybox
<code>
$ pacman -S busybox
</code></p>

<h4>更换pacman平台</h4>

<p>编辑配置文件<code>/etc/pacman.conf</code>并且把<code>Architecture</code>从<code>auto</code>改为新值。你可以参考下面的sed命令：
For x86_64
<code>
$ sed -i -e s/'Architecture = auto'/'Architecture = x86_64'/g /etc/pacman.conf
</code>
For i686
<code>
$ sed -i -e s/'Architecture = auto'/'Architecture = i686'/g /etc/pacman.conf
</code>
手动移除Pacman软件仓库的数据库，强制同步新的软件仓库：
<code>
$ rm -rf /var/lib/pacman/sync/*   # remove existing repository cache
$ pacman -Sy                      # sync new architecture repositories
</code></p>

<h4>下载新包</h4>

<p>给所有当前安装包下载新平台版本
<code>
$ pacman -Sw $(pacman -Qq|sed '/^lib32-/ d')  # download new package versions
</code>
如果有些包不能下载，请删除它们。
如果是迁移到32位，安装32位的Busybox fallback now that Pacman has been configured with the 32-bit architecture:
<code>
$ pacman -S busybox
</code>
或者，如果是迁移到64位，安装lib-32-glibc fallback:
<code>
$ pacman -S lib32-glibc
</code></p>

<h3>安装包</h3>

<h4>安装内核（64位）</h4>

<p>将内核升级到64位（x86_64）很安全很简单：32位和64位的应用在64位内核下都能很好的运行。如果是从64位迁移至其它平台，leave the 64-bit kernel installed and running for now and skip this step.
用下面命令安装Arch Linux内核：
<code>
$ pacman -S linux
</code>
启动新的64位内核，并确认它运行x86_64平台：
<code>
$ uname -m
</code></p>

<h4>控制台终端</h4>

<p>现在切换到一个text-mode虚拟控制台（可以通过Ctrl+Alt+F1）来完成接下来的步骤。你可以使用SSH之类的伪终端，但不建议你这么做。有些包会被移除或者被替换，可能会导致X11桌面不稳定，以至于系统无法启动。</p>

<h4>安装Pacman</h4>

<blockquote><p>警告：一旦你开始升级pacman及相关依赖，便不能中断。Pacman及相关依赖必须在同一条命令行上同时安装。
<code>
$ pacman -S pacman glibc libfetch libarchive openssl acl attr xz-utils bzip2 zlib readline bash ncurses expat
</code>
Immediately following this command only Busybox, Bash and Pacman will be executable until the other packages are migrated below. 安装成功前不能重启。</p></blockquote>

<h4>安装已存在的包</h4>

<p>为新平台安装所有之前下载的替换。（此时可以休息休息，因为需要花费一段时间。）
<code>
$ pacman -S $(pacman -Qq)
</code>
For migration away from 64 bits, you may want to skip installing a 32-bit kernel in the command above, since the old 64-bit kernel will still run 32-bit programs.
完整这步迁移后，各方面都已经完成并且可以重启电脑。</p>

<h3>清理</h3>

<p>你现在可以移除Busybox和lib32-glibc。
<code>
$ pacman -Rcn busybox lib32-glibc
</code></p>

<h4>Makepkg compiler flags</h4>

<p>升级中新版的<code>/etc/makepkg.conf</code>可能会被保存至<code>/etc/makepkg.conf.pacnew</code>。如果你以后要用<a href="https://wiki.archlinux.org/index.php/Makepkg">makepkg</a>进行编译，你必须替换或修改老版本。
<code>
$ mv /etc/makepkg.conf /etc/makepkg.conf.backup &amp;&amp; mv /etc/makepkg.conf.pacnew /etc/makepkg.conf
</code>
It might also be a good idea to just get a list of &ldquo;new&rdquo; additions to /etc. You can get a list with the following command:
<code>
$ find /etc/ -type f -name \*.pac\*
</code></p>

<h2>问题解决</h2>

<p>在升级过程中，当glibc替换为新版本后，许多老版本的程序将不能运行。如果发生此类问题，你可以用<a href="https://www.archlinux.org/packages/?name=busybox">busybox</a>和<a href="https://www.archlinux.org/packages/?name=lib32-glibc">lib32-glibc</a>来解决。</p>

<h3>Busybox</h3>

<p>In Arch, Busybox is statically linked; it can run without any libraries. There are many commands available to you. For example, to extract an i686 version of Pacman from a cached package:
<code>
$ busybox tar xf /var/cache/pacman/pkg/pacman-3.3.2-1-i686.pkg.tar.gz -C &lt;some folder&gt;
</code></p>

<h3>Lib32-glibc</h3>

<p>Example run 32 bit /bin/ls:
<code>
$ /lib/ld-linux-x86-32.so.2 /bin/ls
</code></p>

<h2>其它</h2>

<ul>
<li><a href="https://wiki.archlinux.org/index.php/Migrate_installation_to_new_hardware">Migrate installation to new hardware</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
